{"version":3,"sources":["data/months.js","components/currentDate.js","App.js","reportWebVitals.js","index.js"],"names":["months","dateSuffix","dateNumber","dateString","toString","suffix","length","CurrentDate","monthIndex","date","Date","useState","opened","setOpened","className","id","onClick","getDate","getMonth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAMA,G,MAAS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aAKWC,EAAa,SAACC,GACzB,IAAMC,EAAaD,EAAWE,WAE1BC,EAAS,KACb,KAAMF,EAAWG,QAAU,GAA2C,MAAtCH,EAAWA,EAAWG,OAAS,IAC7D,OAAQH,EAAWA,EAAWG,OAAS,IACrC,IAAK,IACHD,EAAS,KACT,MACF,IAAK,IACHA,EAAS,KACT,MACF,IAAK,IACHA,EAAS,KACT,MACF,QACEA,EAAS,KAIf,OAAOF,EAAaE,G,OCjCTE,EAAc,WACzB,IDUwBC,ECVlBC,EAAO,IAAIC,KACjB,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACE,sBAAKC,UAAU,YAAf,UACE,mBAAGC,GAAG,aAAN,4BACEH,GACA,sBAAKE,UAAU,OAAOC,GAAG,aAAaC,QAAS,kBAAMH,GAAU,IAA/D,UACE,mBAAGE,GAAG,OAAN,SAAcd,EAAWQ,EAAKQ,aAC9B,mBAAGF,GAAG,QAAN,UDCgBP,ECDSC,EAAKS,WDCClB,EAAOQ,SCEzCI,GACC,sBAAKE,UAAU,OAAOC,GAAG,aAAzB,UACE,mBAAGA,GAAG,aAAN,kBACA,mBAAGA,GAAG,oBAAN,8BCTKI,EARH,WACV,OACE,qBAAKL,UAAU,eAAf,SACE,cAAC,EAAD,OCMSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fcf79864.chunk.js","sourcesContent":["const months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nexport const monthText = (monthIndex) => months[monthIndex];\r\n\r\nexport const dateSuffix = (dateNumber) => {\r\n  const dateString = dateNumber.toString();\r\n\r\n  let suffix = \"th\";\r\n  if (!(dateString.length >= 2 && dateString[dateString.length - 2] === \"1\")) {\r\n    switch (dateString[dateString.length - 1]) {\r\n      case \"1\":\r\n        suffix = \"st\";\r\n        break;\r\n      case \"2\":\r\n        suffix = \"nd\";\r\n        break;\r\n      case \"3\":\r\n        suffix = \"rd\";\r\n        break;\r\n      default:\r\n        suffix = \"th\";\r\n    }\r\n  }\r\n\r\n  return dateString + suffix;\r\n};\r\n","import \"./currentDate.css\";\r\nimport { dateSuffix, monthText } from \"../data/months\";\r\nimport { useState } from \"react\";\r\n\r\nexport const CurrentDate = () => {\r\n  const date = new Date();\r\n  const [opened, setOpened] = useState(false);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <p id=\"todaysDoor\">Today's door:</p>\r\n      {!opened && (\r\n        <div className=\"door\" id=\"closedDoor\" onClick={() => setOpened(true)}>\r\n          <p id=\"date\">{dateSuffix(date.getDate())}</p>\r\n          <p id=\"month\">{monthText(date.getMonth())}</p>\r\n        </div>\r\n      )}\r\n      {opened && (\r\n        <div className=\"door\" id=\"openedDoor\">\r\n          <p id=\"xmasFactor\">100%</p>\r\n          <p id=\"xmasFactorHeading\">Christmas</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { CurrentDate } from \"./components/currentDate\";\n\nconst App = () => {\n  return (\n    <div className=\"appContainer\">\n      <CurrentDate />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}